{
  // This tsconfig file contains the shared config for the build (tsconfig.build.json) and type checking (tsconfig.json) config.
  "include": [],
  "compilerOptions": {
    // Incremental builds
    // NOTE: Enabling incremental builds speeds up `tsc`. Keep in mind though that it does not reliably bust the cache when the `tsconfig.json` file changes.
    "incremental": true,

    // Type checking
    "strict": false,
    "useDefineForClassFields": false, // Not enabled by default in `strict` mode unless we bump `target` to ES2022.
    "noFallthroughCasesInSwitch": false, // Not enabled by default in `strict` mode.
    "noImplicitReturns": false, // Not enabled by default in `strict` mode.
    "useUnknownInCatchVariables": false, // TODO: This would normally be enabled in `strict` mode but would require some adjustments to the codebase.
    "noImplicitOverride": false, // Not enabled by default in `strict` mode.
    "noUnusedLocals": false, // Not enabled by default in `strict` mode.
    "noUnusedParameters": false, // Not enabled by default in `strict` mode.
    "exactOptionalPropertyTypes": false, // todo
    // TODO: Uncomment and fix types.
    // "noUncheckedIndexedAccess": true,

    // JavaScript support
    "allowJs": false,
    "checkJs": false,

    // Interop constraints
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "forceConsistentCasingInFileNames": false,
    "verbatimModuleSyntax": false, // todo
    "importHelpers": true, //todo: This is only used for build validation. Since we do not have `tslib` installed, this will fail if we accidentally make use of anything that'd require injection of helpers.

    // Language and environment
    "moduleResolution": "bundler",
    "module": "es2022",
    "target": "es2021", // Setting this to `ES2021` enables native support for `Node v16+`: https://github.com/microsoft/TypeScript/wiki/Node-Target-Mapping.
    "lib": [
      "es2022", // By using ES2022 we get access to the `.cause` property on `Error` instances.
      "DOM" // We are adding `DOM` here to get the `fetch`, etc. types. This should be removed once these types are available via DefinitelyTyped.
    ],

    "resolveJsonModule": true,

    // Skip type checking for node modules
    "skipLibCheck": true
  }
}
