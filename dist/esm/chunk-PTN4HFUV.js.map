{"version":3,"sources":["../../src/sdk/common/utils/deep-compare.ts"],"sourcesContent":["import { BigNumber } from '../../types/bignumber.js';\nimport { isBigNumber } from './bignumber-utils.js';\n\n/**\n * @ignore\n */\nexport function deepCompare(a: any, b: any): boolean {\n  let result = false;\n\n  const aType = typeof a;\n  if (aType === typeof b) {\n    switch (aType) {\n      case 'object':\n        if (a === null || b === null) {\n          result = a === b;\n        } else if (a === b) {\n          result = true;\n        } else if (isBigNumber(a) && isBigNumber(b)) {\n          result = (a as BigNumber).eq(b);\n        } else if (a instanceof Date && b instanceof Date) {\n          result = a.getTime() === b.getTime();\n        } else {\n          const aIsArray = Array.isArray(a);\n          const bIsArray = Array.isArray(b);\n\n          if (aIsArray && bIsArray) {\n            const aLength = a.length;\n            const bLength = b.length;\n\n            if (aLength === bLength) {\n              result = true;\n\n              for (let index = 0; index < aLength; index += 1) {\n                if (!deepCompare(a[index], b[index])) {\n                  result = false;\n                  break;\n                }\n              }\n            }\n          } else if (!aIsArray && !bIsArray) {\n            const aKeys = Object.keys(a);\n            const bKeys = Object.keys(b);\n\n            if (aKeys.length === bKeys.length) {\n              result = true;\n\n              for (const key of aKeys) {\n                if (!deepCompare(a[key], b[key])) {\n                  result = false;\n                  break;\n                }\n              }\n            }\n          }\n        }\n        break;\n\n      case 'function':\n        result = true;\n        break;\n\n      default:\n        result = a === b;\n    }\n  }\n\n  return result;\n}\n"],"mappings":";;;;;AAMO,SAAS,YAAY,GAAQ,GAAiB;AACnD,MAAI,SAAS;AAEb,QAAM,QAAQ,OAAO;AACrB,MAAI,UAAU,OAAO,GAAG;AACtB,YAAQ,OAAO;AAAA,MACb,KAAK;AACH,YAAI,MAAM,QAAQ,MAAM,MAAM;AAC5B,mBAAS,MAAM;AAAA,QACjB,WAAW,MAAM,GAAG;AAClB,mBAAS;AAAA,QACX,WAAW,YAAY,CAAC,KAAK,YAAY,CAAC,GAAG;AAC3C,mBAAU,EAAgB,GAAG,CAAC;AAAA,QAChC,WAAW,aAAa,QAAQ,aAAa,MAAM;AACjD,mBAAS,EAAE,QAAQ,MAAM,EAAE,QAAQ;AAAA,QACrC,OAAO;AACL,gBAAM,WAAW,MAAM,QAAQ,CAAC;AAChC,gBAAM,WAAW,MAAM,QAAQ,CAAC;AAEhC,cAAI,YAAY,UAAU;AACxB,kBAAM,UAAU,EAAE;AAClB,kBAAM,UAAU,EAAE;AAElB,gBAAI,YAAY,SAAS;AACvB,uBAAS;AAET,uBAAS,QAAQ,GAAG,QAAQ,SAAS,SAAS,GAAG;AAC/C,oBAAI,CAAC,YAAY,EAAE,KAAK,GAAG,EAAE,KAAK,CAAC,GAAG;AACpC,2BAAS;AACT;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF,WAAW,CAAC,YAAY,CAAC,UAAU;AACjC,kBAAM,QAAQ,OAAO,KAAK,CAAC;AAC3B,kBAAM,QAAQ,OAAO,KAAK,CAAC;AAE3B,gBAAI,MAAM,WAAW,MAAM,QAAQ;AACjC,uBAAS;AAET,yBAAW,OAAO,OAAO;AACvB,oBAAI,CAAC,YAAY,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG;AAChC,2BAAS;AACT;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AACA;AAAA,MAEF,KAAK;AACH,iBAAS;AACT;AAAA,MAEF;AACE,iBAAS,MAAM;AAAA,IACnB;AAAA,EACF;AAEA,SAAO;AACT;","names":[]}