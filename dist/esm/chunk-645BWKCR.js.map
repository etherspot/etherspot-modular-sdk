{"version":3,"sources":["../../src/sdk/network/utils/prepare-network-name.ts"],"sourcesContent":["import { NetworkNames, NETWORK_NAME_TO_CHAIN_ID, CHAIN_ID_TO_NETWORK_NAME } from '../constants.js';\n\nexport function prepareNetworkName(networkNameOrChainId: string | number): NetworkNames {\n  let result: NetworkNames = null;\n\n  if (networkNameOrChainId) {\n    if (typeof networkNameOrChainId === 'string') {\n      if (networkNameOrChainId.startsWith('0x')) {\n        networkNameOrChainId = parseInt(networkNameOrChainId.slice(2), 16) || 0;\n      } else {\n        const chainId = NETWORK_NAME_TO_CHAIN_ID[networkNameOrChainId];\n\n        networkNameOrChainId = chainId ? chainId : parseInt(networkNameOrChainId, 10) || 0;\n      }\n    }\n\n    if (typeof networkNameOrChainId === 'number') {\n      result = CHAIN_ID_TO_NETWORK_NAME[networkNameOrChainId] || null;\n    }\n  }\n\n  return result;\n}\n"],"mappings":";;;;;;AAEO,SAAS,mBAAmB,sBAAqD;AACtF,MAAI,SAAuB;AAE3B,MAAI,sBAAsB;AACxB,QAAI,OAAO,yBAAyB,UAAU;AAC5C,UAAI,qBAAqB,WAAW,IAAI,GAAG;AACzC,+BAAuB,SAAS,qBAAqB,MAAM,CAAC,GAAG,EAAE,KAAK;AAAA,MACxE,OAAO;AACL,cAAM,UAAU,yBAAyB,oBAAoB;AAE7D,+BAAuB,UAAU,UAAU,SAAS,sBAAsB,EAAE,KAAK;AAAA,MACnF;AAAA,IACF;AAEA,QAAI,OAAO,yBAAyB,UAAU;AAC5C,eAAS,yBAAyB,oBAAoB,KAAK;AAAA,IAC7D;AAAA,EACF;AAEA,SAAO;AACT;","names":[]}