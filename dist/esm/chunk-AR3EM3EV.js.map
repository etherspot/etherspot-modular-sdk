{"version":3,"sources":["../../src/sdk/common/utils/get-bytes.ts"],"sourcesContent":["import { BytesLike } from '../types.js';\n\n/**\n * @ignore\n */\nexport function getBytes(value: BytesLike, name?: string, copy?: boolean): Uint8Array {\n  if (value instanceof Uint8Array) {\n      if (copy) { return new Uint8Array(value); }\n      return value;\n  }\n\n  if (typeof(value) === \"string\" && value.match(/^0x([0-9a-f][0-9a-f])*$/i)) {\n      const result = new Uint8Array((value.length - 2) / 2);\n      let offset = 2;\n      for (let i = 0; i < result.length; i++) {\n          result[i] = parseInt(value.substring(offset, offset + 2), 16);\n          offset += 2;\n      }\n      return result;\n  }\n\n  throw new Error('Invalid value for getBytes!');\n}"],"mappings":";AAKO,SAAS,SAAS,OAAkB,MAAe,MAA4B;AACpF,MAAI,iBAAiB,YAAY;AAC7B,QAAI,MAAM;AAAE,aAAO,IAAI,WAAW,KAAK;AAAA,IAAG;AAC1C,WAAO;AAAA,EACX;AAEA,MAAI,OAAO,UAAW,YAAY,MAAM,MAAM,0BAA0B,GAAG;AACvE,UAAM,SAAS,IAAI,YAAY,MAAM,SAAS,KAAK,CAAC;AACpD,QAAI,SAAS;AACb,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,aAAO,CAAC,IAAI,SAAS,MAAM,UAAU,QAAQ,SAAS,CAAC,GAAG,EAAE;AAC5D,gBAAU;AAAA,IACd;AACA,WAAO;AAAA,EACX;AAEA,QAAM,IAAI,MAAM,6BAA6B;AAC/C;","names":[]}