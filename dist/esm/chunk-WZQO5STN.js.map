{"version":3,"sources":["../../src/sdk/common/OperationUtils.ts"],"sourcesContent":["import { resolveProperties } from './utils/index.js';\nimport { BaseAccountUserOperationStruct } from '../types/user-operation-types.js';\nimport { toHex } from 'viem';\nimport { BigNumber } from '../types/bignumber.js';\n\nexport function toJSON(op: Partial<BaseAccountUserOperationStruct>): Promise<any> {\n  return resolveProperties(op).then((userOp) =>\n    Object.keys(userOp)\n      .map((key) => {\n        let val = (userOp as any)[key];\n        if (typeof val === 'object' && BigNumber.isBigNumber(val)) {\n          val = val.toHexString()\n        }\n        else if (typeof val !== 'string' || !val.startsWith('0x')) {\n          val = toHex(val);\n        }\n        return [key, val];\n      })\n      .reduce(\n        (set, [k, v]) => ({\n          ...set,\n          [k]: v,\n        }),\n        {},\n      ),\n  );\n}\nexport async function printOp(op: Partial<BaseAccountUserOperationStruct>): Promise<string> {\n  return toJSON(op).then((userOp) => JSON.stringify(userOp, null, 2));\n}\n"],"mappings":";;;;;;;;;;;AAKO,SAAS,OAAO,IAA2D;AAChF,SAAO,kBAAkB,EAAE,EAAE;AAAA,IAAK,CAAC,WACjC,OAAO,KAAK,MAAM,EACf,IAAI,CAAC,QAAQ;AACZ,UAAI,MAAO,OAAe,GAAG;AAC7B,UAAI,OAAO,QAAQ,YAAY,UAAU,YAAY,GAAG,GAAG;AACzD,cAAM,IAAI,YAAY;AAAA,MACxB,WACS,OAAO,QAAQ,YAAY,CAAC,IAAI,WAAW,IAAI,GAAG;AACzD,cAAM,MAAM,GAAG;AAAA,MACjB;AACA,aAAO,CAAC,KAAK,GAAG;AAAA,IAClB,CAAC,EACA;AAAA,MACC,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO;AAAA,QAChB,GAAG;AAAA,QACH,CAAC,CAAC,GAAG;AAAA,MACP;AAAA,MACA,CAAC;AAAA,IACH;AAAA,EACJ;AACF;AACA,eAAsB,QAAQ,IAA8D;AAC1F,SAAO,OAAO,EAAE,EAAE,KAAK,CAAC,WAAW,KAAK,UAAU,QAAQ,MAAM,CAAC,CAAC;AACpE;","names":[]}