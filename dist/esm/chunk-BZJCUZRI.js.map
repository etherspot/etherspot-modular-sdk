{"version":3,"sources":["../../src/sdk/wallet/providers/walletClient.provider.ts"],"sourcesContent":["import { Address, concat, encodeAbiParameters, Hash, hashMessage, hashTypedData, Hex, parseAbiParameters, toBytes, TransactionRequest, WalletClient } from 'viem';\nimport { MessagePayload, WalletProvider } from './interfaces.js';\n\nexport class WalletClientProvider implements WalletProvider {\n  readonly type = 'WalletClient';\n  readonly address: string;\n  readonly accountAddress: string;\n\n  readonly wallet: WalletClient;\n\n  constructor(walletClient: WalletClient) {\n    this.wallet = walletClient\n\n    const { address } = this.wallet.account;\n\n    this.address = address;\n  }\n\n  async signMessage(message: Hex, validatorAddress?: Address, factoryAddress?: Address, initCode?: Hex): Promise<string> {\n    const msg = toBytes(hashMessage({raw: toBytes(message)}));\n    const signature: Hex = await this.wallet.signMessage({\n      message: {raw: msg},\n      account: this.wallet.account\n    })\n    if (initCode !== '0x') {\n      const abiCoderResult = encodeAbiParameters(\n        parseAbiParameters('address, bytes, bytes'),\n        [factoryAddress, initCode, concat([validatorAddress, signature])]\n      )\n      return abiCoderResult + '6492649264926492649264926492649264926492649264926492649264926492'; //magicBytes\n    }\n    return concat([\n      validatorAddress,\n      signature\n    ]);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async signTypedData(msg: MessagePayload, validatorAddress?: Address, factoryAddress?: Address, initCode?: Hex): Promise<string> {\n    const typedDataEncoder = hashTypedData({domain: msg.domain, types: msg.types, primaryType: msg.primaryType, message: msg.message});\n    const signature = await this.wallet.signMessage({\n      message: {raw: toBytes(typedDataEncoder)},\n      account: this.wallet.account\n    });\n    if (initCode !== '0x') {\n      const abiCoderResult = encodeAbiParameters(\n        parseAbiParameters('address, bytes, bytes'),\n        [factoryAddress, initCode, concat([validatorAddress, signature])]\n      )\n      return abiCoderResult + '6492649264926492649264926492649264926492649264926492649264926492'; //magicBytes\n    }\n    return concat([\n      validatorAddress,\n      signature]\n    );\n  }\n\n  async eth_requestAccounts(address: string): Promise<string[]> {\n    return [address];\n  }\n\n  async eth_accounts(address: string): Promise<string[]> {\n    return [address];\n  }\n\n  async signUserOp(message: Hex): Promise<string> {\n    return this.wallet.signMessage({\n      message: { raw: message },\n      account: this.wallet.account\n    });\n  }\n\n  async eth_sendTransaction(transaction: TransactionRequest): Promise<Hash> {\n    return this.wallet.sendTransaction({\n      ...transaction,\n      account: this.wallet.account,\n      chain: this.wallet.chain,\n      kzg: undefined\n    });\n  }\n\n  async eth_signTransaction(transaction: TransactionRequest): Promise<string> {\n    return this.wallet.signTransaction({\n      ...transaction,\n      account: this.wallet.account,\n      chain: this.wallet.chain,\n      kzg: undefined\n    });\n  }\n}\n"],"mappings":";;;;;;;;;;;;AAGO,IAAM,uBAAN,MAAqD;AAAA,EACjD,OAAO;AAAA,EACP;AAAA,EACA;AAAA,EAEA;AAAA,EAET,YAAY,cAA4B;AACtC,SAAK,SAAS;AAEd,UAAM,EAAE,QAAQ,IAAI,KAAK,OAAO;AAEhC,SAAK,UAAU;AAAA,EACjB;AAAA,EAEA,MAAM,YAAY,SAAc,kBAA4B,gBAA0B,UAAiC;AACrH,UAAM,MAAM,QAAQ,YAAY,EAAC,KAAK,QAAQ,OAAO,EAAC,CAAC,CAAC;AACxD,UAAM,YAAiB,MAAM,KAAK,OAAO,YAAY;AAAA,MACnD,SAAS,EAAC,KAAK,IAAG;AAAA,MAClB,SAAS,KAAK,OAAO;AAAA,IACvB,CAAC;AACD,QAAI,aAAa,MAAM;AACrB,YAAM,iBAAiB;AAAA,QACrB,mBAAmB,uBAAuB;AAAA,QAC1C,CAAC,gBAAgB,UAAU,OAAO,CAAC,kBAAkB,SAAS,CAAC,CAAC;AAAA,MAClE;AACA,aAAO,iBAAiB;AAAA,IAC1B;AACA,WAAO,OAAO;AAAA,MACZ;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA,EAGA,MAAM,cAAc,KAAqB,kBAA4B,gBAA0B,UAAiC;AAC9H,UAAM,mBAAmB,cAAc,EAAC,QAAQ,IAAI,QAAQ,OAAO,IAAI,OAAO,aAAa,IAAI,aAAa,SAAS,IAAI,QAAO,CAAC;AACjI,UAAM,YAAY,MAAM,KAAK,OAAO,YAAY;AAAA,MAC9C,SAAS,EAAC,KAAK,QAAQ,gBAAgB,EAAC;AAAA,MACxC,SAAS,KAAK,OAAO;AAAA,IACvB,CAAC;AACD,QAAI,aAAa,MAAM;AACrB,YAAM,iBAAiB;AAAA,QACrB,mBAAmB,uBAAuB;AAAA,QAC1C,CAAC,gBAAgB,UAAU,OAAO,CAAC,kBAAkB,SAAS,CAAC,CAAC;AAAA,MAClE;AACA,aAAO,iBAAiB;AAAA,IAC1B;AACA,WAAO;AAAA,MAAO;AAAA,QACZ;AAAA,QACA;AAAA,MAAS;AAAA,IACX;AAAA,EACF;AAAA,EAEA,MAAM,oBAAoB,SAAoC;AAC5D,WAAO,CAAC,OAAO;AAAA,EACjB;AAAA,EAEA,MAAM,aAAa,SAAoC;AACrD,WAAO,CAAC,OAAO;AAAA,EACjB;AAAA,EAEA,MAAM,WAAW,SAA+B;AAC9C,WAAO,KAAK,OAAO,YAAY;AAAA,MAC7B,SAAS,EAAE,KAAK,QAAQ;AAAA,MACxB,SAAS,KAAK,OAAO;AAAA,IACvB,CAAC;AAAA,EACH;AAAA,EAEA,MAAM,oBAAoB,aAAgD;AACxE,WAAO,KAAK,OAAO,gBAAgB;AAAA,MACjC,GAAG;AAAA,MACH,SAAS,KAAK,OAAO;AAAA,MACrB,OAAO,KAAK,OAAO;AAAA,MACnB,KAAK;AAAA,IACP,CAAC;AAAA,EACH;AAAA,EAEA,MAAM,oBAAoB,aAAkD;AAC1E,WAAO,KAAK,OAAO,gBAAgB;AAAA,MACjC,GAAG;AAAA,MACH,SAAS,KAAK,OAAO;AAAA,MACrB,OAAO,KAAK,OAAO;AAAA,MACnB,KAAK;AAAA,IACP,CAAC;AAAA,EACH;AACF;","names":[]}