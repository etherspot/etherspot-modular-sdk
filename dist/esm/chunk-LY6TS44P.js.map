{"version":3,"sources":["../../src/sdk/common/rxjs/object.subject.ts"],"sourcesContent":["import { Observable, BehaviorSubject } from 'rxjs';\nimport { deepCompare } from '../utils/index.js';\nimport { distinctUniqueKey } from './distinct-unique-key.operator.js';\n\n/**\n * @ignore\n */\nexport class ObjectSubject<T extends {}, K extends keyof T = keyof T> extends BehaviorSubject<T> {\n  constructor(value: T = null) {\n    super(value);\n  }\n\n  observeKey<R = T[K]>(key: K): Observable<R> {\n    return this.pipe<any>(distinctUniqueKey(key));\n  }\n\n  next(value: T): void {\n    if (!value) {\n      super.next(null);\n    } else if (\n      !this.value || //\n      !deepCompare(this.prepareForCompare(this.value), this.prepareForCompare(value))\n    ) {\n      super.next(this.prepareForNext(value));\n    }\n  }\n\n  nextData(value: T): void {\n    if (!value) {\n      super.next('' as any);\n    } else if (\n      !this.value || //\n      !deepCompare(this.prepareForCompare(this.value), this.prepareForCompare(value))\n    ) {\n      super.next(this.prepareForNext(value));\n    }\n  }\n\n  prepareForNext(value: T): T {\n    return value;\n  }\n\n  prepareForCompare(value: T): any {\n    return value;\n  }\n}\n"],"mappings":";;;;;;;;AAAA,SAAqB,uBAAuB;AAOrC,IAAM,gBAAN,cAAuE,gBAAmB;AAAA,EAC/F,YAAY,QAAW,MAAM;AAC3B,UAAM,KAAK;AAAA,EACb;AAAA,EAEA,WAAqB,KAAuB;AAC1C,WAAO,KAAK,KAAU,kBAAkB,GAAG,CAAC;AAAA,EAC9C;AAAA,EAEA,KAAK,OAAgB;AACnB,QAAI,CAAC,OAAO;AACV,YAAM,KAAK,IAAI;AAAA,IACjB,WACE,CAAC,KAAK;AAAA,IACN,CAAC,YAAY,KAAK,kBAAkB,KAAK,KAAK,GAAG,KAAK,kBAAkB,KAAK,CAAC,GAC9E;AACA,YAAM,KAAK,KAAK,eAAe,KAAK,CAAC;AAAA,IACvC;AAAA,EACF;AAAA,EAEA,SAAS,OAAgB;AACvB,QAAI,CAAC,OAAO;AACV,YAAM,KAAK,EAAS;AAAA,IACtB,WACE,CAAC,KAAK;AAAA,IACN,CAAC,YAAY,KAAK,kBAAkB,KAAK,KAAK,GAAG,KAAK,kBAAkB,KAAK,CAAC,GAC9E;AACA,YAAM,KAAK,KAAK,eAAe,KAAK,CAAC;AAAA,IACvC;AAAA,EACF;AAAA,EAEA,eAAe,OAAa;AAC1B,WAAO;AAAA,EACT;AAAA,EAEA,kBAAkB,OAAe;AAC/B,WAAO;AAAA,EACT;AACF;","names":[]}